/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Company } from "../../company/base/Company";
import {
  ValidateNested,
  IsDate,
  IsEnum,
  IsOptional,
  IsString,
  IsInt,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumTimeSlotDayOfWeek } from "./EnumTimeSlotDayOfWeek";
import { ReservableSlot } from "../../reservableSlot/base/ReservableSlot";
@ObjectType()
class TimeSlot {
  @ApiProperty({
    required: true,
    type: () => Company,
  })
  @ValidateNested()
  @Type(() => Company)
  company?: Company;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumTimeSlotDayOfWeek,
  })
  @IsEnum(EnumTimeSlotDayOfWeek)
  @IsOptional()
  @Field(() => EnumTimeSlotDayOfWeek, {
    nullable: true,
  })
  dayOfWeek?: "MON" | "TUE" | "WED" | "THU" | "FRI" | "SAT" | "SUN" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  maxSeatsAvailable!: number | null;

  @ApiProperty({
    required: false,
    type: () => [ReservableSlot],
  })
  @ValidateNested()
  @Type(() => ReservableSlot)
  @IsOptional()
  reservableSlots?: Array<ReservableSlot>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  timeFrom!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  timeTo!: string;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { TimeSlot };
