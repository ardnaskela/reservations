/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsBoolean,
} from "class-validator";
import { FavoriteCompanyUpdateManyWithoutCustomersInput } from "./FavoriteCompanyUpdateManyWithoutCustomersInput";
import { Type } from "class-transformer";
import { CompanyUpdateManyWithoutCustomersInput } from "./CompanyUpdateManyWithoutCustomersInput";
import { LastSeenCompanyUpdateManyWithoutCustomersInput } from "./LastSeenCompanyUpdateManyWithoutCustomersInput";
import { ReservationUpdateManyWithoutCustomersInput } from "./ReservationUpdateManyWithoutCustomersInput";
@InputType()
class CustomerUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  email?: string;

  @ApiProperty({
    required: false,
    type: () => FavoriteCompanyUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => FavoriteCompanyUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => FavoriteCompanyUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  favoriteCompanies?: FavoriteCompanyUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  firstName?: string;

  @ApiProperty({
    required: false,
    type: () => CompanyUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => CompanyUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => CompanyUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  handledCompanies?: CompanyUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isVerified?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  lastName?: string;

  @ApiProperty({
    required: false,
    type: () => LastSeenCompanyUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => LastSeenCompanyUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => LastSeenCompanyUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  lastSeenCompanies?: LastSeenCompanyUpdateManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReservationUpdateManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => ReservationUpdateManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => ReservationUpdateManyWithoutCustomersInput, {
    nullable: true,
  })
  reservations?: ReservationUpdateManyWithoutCustomersInput;
}
export { CustomerUpdateInput };
