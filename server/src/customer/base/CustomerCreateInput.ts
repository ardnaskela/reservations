/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  ValidateNested,
  IsOptional,
  IsBoolean,
} from "class-validator";
import { FavoriteCompanyCreateNestedManyWithoutCustomersInput } from "./FavoriteCompanyCreateNestedManyWithoutCustomersInput";
import { Type } from "class-transformer";
import { CompanyCreateNestedManyWithoutCustomersInput } from "./CompanyCreateNestedManyWithoutCustomersInput";
import { LastSeenCompanyCreateNestedManyWithoutCustomersInput } from "./LastSeenCompanyCreateNestedManyWithoutCustomersInput";
import { ReservationCreateNestedManyWithoutCustomersInput } from "./ReservationCreateNestedManyWithoutCustomersInput";
@InputType()
class CustomerCreateInput {
  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  email!: string;

  @ApiProperty({
    required: false,
    type: () => FavoriteCompanyCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => FavoriteCompanyCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => FavoriteCompanyCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  favoriteCompanies?: FavoriteCompanyCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  firstName!: string;

  @ApiProperty({
    required: false,
    type: () => CompanyCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => CompanyCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => CompanyCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  handledCompanies?: CompanyCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isVerified?: boolean | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  lastName!: string;

  @ApiProperty({
    required: false,
    type: () => LastSeenCompanyCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => LastSeenCompanyCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => LastSeenCompanyCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  lastSeenCompanies?: LastSeenCompanyCreateNestedManyWithoutCustomersInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  phoneNumber?: string | null;

  @ApiProperty({
    required: false,
    type: () => ReservationCreateNestedManyWithoutCustomersInput,
  })
  @ValidateNested()
  @Type(() => ReservationCreateNestedManyWithoutCustomersInput)
  @IsOptional()
  @Field(() => ReservationCreateNestedManyWithoutCustomersInput, {
    nullable: true,
  })
  reservations?: ReservationCreateNestedManyWithoutCustomersInput;
}
export { CustomerCreateInput };
