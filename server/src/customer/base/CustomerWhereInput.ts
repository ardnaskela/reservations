/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { StringFilter } from "../../util/StringFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested } from "class-validator";
import { FavoriteCompanyListRelationFilter } from "../../favoriteCompany/base/FavoriteCompanyListRelationFilter";
import { CompanyListRelationFilter } from "../../company/base/CompanyListRelationFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { LastSeenCompanyListRelationFilter } from "../../lastSeenCompany/base/LastSeenCompanyListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { ReservationListRelationFilter } from "../../reservation/base/ReservationListRelationFilter";
@InputType()
class CustomerWhereInput {
  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  email?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => FavoriteCompanyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FavoriteCompanyListRelationFilter)
  @IsOptional()
  @Field(() => FavoriteCompanyListRelationFilter, {
    nullable: true,
  })
  favoriteCompanies?: FavoriteCompanyListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  firstName?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => CompanyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CompanyListRelationFilter)
  @IsOptional()
  @Field(() => CompanyListRelationFilter, {
    nullable: true,
  })
  handledCompanies?: CompanyListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isVerified?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  lastName?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => LastSeenCompanyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LastSeenCompanyListRelationFilter)
  @IsOptional()
  @Field(() => LastSeenCompanyListRelationFilter, {
    nullable: true,
  })
  lastSeenCompanies?: LastSeenCompanyListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  phoneNumber?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ReservationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReservationListRelationFilter)
  @IsOptional()
  @Field(() => ReservationListRelationFilter, {
    nullable: true,
  })
  reservations?: ReservationListRelationFilter;
}
export { CustomerWhereInput };
