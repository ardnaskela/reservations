/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AddressWhereUniqueInput } from "../../address/base/AddressWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { CompanySetNotificationListRelationFilter } from "../../companySetNotification/base/CompanySetNotificationListRelationFilter";
import { CompanyTypeWhereUniqueInput } from "../../companyType/base/CompanyTypeWhereUniqueInput";
import { FavoriteCompanyListRelationFilter } from "../../favoriteCompany/base/FavoriteCompanyListRelationFilter";
import { StringFilter } from "../../util/StringFilter";
import { LastSeenCompanyListRelationFilter } from "../../lastSeenCompany/base/LastSeenCompanyListRelationFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { TimeSlotListRelationFilter } from "../../timeSlot/base/TimeSlotListRelationFilter";
@InputType()
class CompanyWhereInput {
  @ApiProperty({
    required: false,
    type: () => AddressWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => AddressWhereUniqueInput)
  @IsOptional()
  @Field(() => AddressWhereUniqueInput, {
    nullable: true,
  })
  address?: AddressWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => CompanySetNotificationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => CompanySetNotificationListRelationFilter)
  @IsOptional()
  @Field(() => CompanySetNotificationListRelationFilter, {
    nullable: true,
  })
  companySetNotifications?: CompanySetNotificationListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => CompanyTypeWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CompanyTypeWhereUniqueInput)
  @IsOptional()
  @Field(() => CompanyTypeWhereUniqueInput, {
    nullable: true,
  })
  companyType?: CompanyTypeWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => FavoriteCompanyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => FavoriteCompanyListRelationFilter)
  @IsOptional()
  @Field(() => FavoriteCompanyListRelationFilter, {
    nullable: true,
  })
  favoriteCompanies?: FavoriteCompanyListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => LastSeenCompanyListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LastSeenCompanyListRelationFilter)
  @IsOptional()
  @Field(() => LastSeenCompanyListRelationFilter, {
    nullable: true,
  })
  lastSeenCompanies?: LastSeenCompanyListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  logo?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  owner?: CustomerWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  phoneNumber?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => TimeSlotListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TimeSlotListRelationFilter)
  @IsOptional()
  @Field(() => TimeSlotListRelationFilter, {
    nullable: true,
  })
  timeSlots?: TimeSlotListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  vatCode?: StringFilter;
}
export { CompanyWhereInput };
