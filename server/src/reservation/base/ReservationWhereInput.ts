/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CustomerWhereUniqueInput } from "../../customer/base/CustomerWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { BooleanNullableFilter } from "../../util/BooleanNullableFilter";
import { ReservableSlotWhereUniqueInput } from "../../reservableSlot/base/ReservableSlotWhereUniqueInput";
import { ReservationNotificationListRelationFilter } from "../../reservationNotification/base/ReservationNotificationListRelationFilter";
@InputType()
class ReservationWhereInput {
  @ApiProperty({
    required: false,
    type: () => CustomerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CustomerWhereUniqueInput)
  @IsOptional()
  @Field(() => CustomerWhereUniqueInput, {
    nullable: true,
  })
  customer?: CustomerWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: BooleanNullableFilter,
  })
  @Type(() => BooleanNullableFilter)
  @IsOptional()
  @Field(() => BooleanNullableFilter, {
    nullable: true,
  })
  isAccepted?: BooleanNullableFilter;

  @ApiProperty({
    required: false,
    type: () => ReservableSlotWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => ReservableSlotWhereUniqueInput)
  @IsOptional()
  @Field(() => ReservableSlotWhereUniqueInput, {
    nullable: true,
  })
  reservableSlot?: ReservableSlotWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => ReservationNotificationListRelationFilter,
  })
  @ValidateNested()
  @Type(() => ReservationNotificationListRelationFilter)
  @IsOptional()
  @Field(() => ReservationNotificationListRelationFilter, {
    nullable: true,
  })
  reservationNotifications?: ReservationNotificationListRelationFilter;
}
export { ReservationWhereInput };
